
Parametre vm Virtualbox:

Settings -> networks -> bridged adapter
Preference -> set path de download vers sgroinfre/goinfre/Perso/sgalasso/VM

*********************************************

Installer packages:
&> su
&> apt-get update && apt-get upgrade
&> apt-get install sudo vim iptables-persistent apache2 portsentry

*********************************************

Passer user en sudo:
&> sudo usermod -aG sudo username

Switcher sur le user:
&> su - username

Tester si le user est sudo:
&> sudo whoami
Si il est écrit root, alors c’est bon

*********************************************

Changer ip DHCP en ipfix avec netmask /30
&> sudo nano /etc/network/interfaces

Changer:
Allow-hotplug enp0s3
Face enp0s3 inet dhcp

Par:
Allow-hotplug enp0s3
Face enp0s3 inet static
	address 10.11.200.170
	nemask 255.255.255.252
	gateway 10.11.254.254


Reboot la VM:
&> sudo reboot

Tester avec une commande nécessitant internet, si ça marche toujours, ex:
&> sudo apt-get upgrade

*********************************************

Changer Port ssh
&> sudo nano /etc/ssh/sshd_config

Changer:
#Port 22

Par:
Port 1996 (port supérieur a 1024 et inférieur a 65535)

Relancer le serveur ssh
&> sudo service ssh restart

*********************************************

Interdire accès root en ssh:
&> sudo nano /etc/ssh/sshd_config

Changer:
#PermitRootLogin prohibit-password

Par:
PermitRootLogin no

Relancer le serveur ssh
&> sudo service ssh restart

*********************************************

Create ssh publickeys:
(Sur le mac)
&> ssh-keygen

Copy ssh key:
(Sur le mac)
&> ssh-copy-id username@10.11.200.170 -p1996

Si il est écrit Number of key(s) added: 1, alors c’est bon

S’authentifier avec ssh key:
(Sur le mac)
$> ssh sgalasso@10.11.200.170 -p1996

Disable password authentication:
&> sudo nano /etc/ssh/sshd_config

Changer:
#PasswordAuthentication yes

Par:
PasswordAuthentication no

Restart sshd service:
&> sudo systemctl restart ssh

Tests:
Se connecter en ssh sans mdr pour verifier si ça marche

*********************************************

Lister les rules:
&> sudo iptables -L

- Script bash (a mettre dans /etc/network/if-pre-up.c/iptables) debut:
#!/bin/bash

# FLUSH everyting
sudo iptables -F

# DROP everything
sudo iptables -P INPUT DROP
sudo iptables -P FORWARD DROP
sudo iptables -P OUTPUT DROP

sudo iptables -I INPUT -p tcp --dport 1996 -i enp0s3 -m state --state NEW -m recent --set
sudo iptables -I INPUT -p TCP --dport 1996 -i enp0s3 -m state --state NEW -m recent --update --seconds 60 --hitcount 10 -j DROP
sudo iptables -I INPUT -p TCP --dport 80 -i enp0s3 -m state --state NEW -m recent --set
sudo iptables -I INPUT -p TCP --dport 80 -i enp0s3 -m state --state NEW -m recent --update --seconds 60 --hitcount 10 -j DROP
sudo iptables -I INPUT -p TCP --dport 443 -i enp0s3 -m state --state NEW -m recent --set
sudo iptables -I INPUT -p TCP --dport 443 -i enp0s3 -m state --state NEW -m recent --update --seconds 60 --hitcount 10 -j DROP

# ESTABLISHED connections rules
sudo iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -m conntrack ! --ctstate INVALID -j ACCEPT

# LOCALHOST rules
sudo iptables -t filter -A INPUT -i lo -j ACCEPT
sudo iptables -t filter -A OUTPUT -o lo -j ACCEPT

# SSH rules
sudo iptables -A INPUT -p tcp --dport 1996 -j ACCEPT
sudo iptables -A OUTPUT -p tcp --dport 1996 -j ACCEPT

# HTTP rules
sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT
sudo iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT

# HTTPS rules
sudo iptables -A INPUT -p tcp --dport 443 -j ACCEPT
sudo iptables -A OUTPUT -p tcp --dport 443 -j ACCEPT
- Script bash fin

Changer permissions:
&> sudo chmod /etc/network/if-pre-up.d/iptables

Relancer VM
&> sudo reboot

*********************************************

Configuration portsentry:
https://fr-wiki.ikoula.com/fr Se_prot%C3%A9ger_contre_le_scan_de_ports_avec_portsentry

*********************************************

Tests security:
Cloner vm, changer ip et port

Installer slow loris:
&> sudo git clone https://github.com/gkbrk/slowloris.git

Attaque slowloris depuis clone:
&> sudo python3 slowloris.py [ip]:[port]

*********************************************

Lister tous les services:
sudo service —-status-all

Desinstaller services inutiles:
&> sudo apt-get remove nameofservice
&> sudo apt-get purge nameofservice

*********************************************

- Debut script de Maj ressources:
#!/bin/bash

sudo apt-get update -y
sudo apt-get upgrade -y
- Fin du script

Config crontab:
0  4	* * 1	root	sh /etc/script/update.sh >> /var/log/update_script.log
@reboot		root	sh /etc/script/update.sh >> /var/log/update_script.log

*********************************************

- Debut script crontab check:
#!/bin/bash

cat /etc/crontab > /home/sgalasso/crontab_tmp

DIFF=$(sudo diff /home/sgalasso/crontab_tmp /home/sgalasso/crontab_last)

if [ "$DIFF" != "" ];
then
	echo "Arrrg !!! Crontab has changed"
	sudo sendmail sgalasso@student.42.fr < /etc/crontab
else
	echo "Crontab is goood, no worries"
fi

sudo rm -rf /home/sgalasso/crontab_tmp
sudo cat /etc/crontab > /home/sgalasso/crontab_last
- Fin du script

Config crontab:
0  0	* * *	root	sh /etc/script/crontab_check.sh

*********************************************

Mise en place serveur web:

*********************************************

Déploiement:

